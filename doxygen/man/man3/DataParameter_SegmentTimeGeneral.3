.TH "DataParameter::SegmentTimeGeneral" 3 "Mon Jun 19 2017" "ECM Control System" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DataParameter::SegmentTimeGeneral \- The \fBSegmentTimeGeneral\fP class\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <segment_time_general\&.h>\fP
.PP
Inherits \fBDataParameter::AbstractParameter\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSegmentTimeGeneral\fP ()"
.br
.RI "\fBSegmentTimeGeneral\fP\&. "
.ti -1c
.RI "\fBSegmentTimeGeneral\fP (const int &numSegments)"
.br
.RI "\fBSegmentTimeGeneral\fP\&. "
.ti -1c
.RI "\fBSegmentTimeGeneral\fP (const \fBSegmentTimeGeneral\fP &obj)"
.br
.RI "\fBSegmentTimeGeneral\fP\&. "
.ti -1c
.RI "virtual \fBDataParameter::ParameterType\fP \fBgetParameterType\fP () const"
.br
.RI "getParameterType "
.ti -1c
.RI "virtual QByteArray \fBgetByteArray\fP () const"
.br
.RI "getByteArray "
.ti -1c
.RI "virtual std::string \fBgetDescription\fP () const"
.br
.RI "getDescription "
.ti -1c
.RI "void \fBsetStartingRegister\fP (const uint8_t &startSegment)"
.br
.RI "setStartingRegister "
.ti -1c
.RI "void \fBsetNumberofSequentialRegisters\fP (const uint8_t &seqSegment)"
.br
.RI "setNumberofSequentialRegisters "
.ti -1c
.RI "void \fBappendRegisterData\fP (const \fBSegmentTimeDataGeneral\fP &data)"
.br
.RI "appendRegisterData "
.ti -1c
.RI "void \fBupdateRegisterData\fP (const int &registerIndex, const \fBSegmentTimeDataGeneral\fP &data)"
.br
.RI "updateRegisterData "
.ti -1c
.RI "void \fBinitializeData\fP ()"
.br
.RI "initializeData "
.ti -1c
.RI "void \fBoperator=\fP (const \fBSegmentTimeGeneral\fP &rhs)"
.br
.RI "operator = "
.ti -1c
.RI "bool \fBoperator==\fP (const \fBSegmentTimeGeneral\fP &rhs)"
.br
.RI "operator == "
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBSegmentTimeGeneral\fP &rhs)"
.br
.RI "operator != "
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "uint8_t \fBnumSeqSegments\fP"
.br
.RI "numSeqSegments "
.ti -1c
.RI "std::vector< \fBDataParameter::SegmentTimeDataGeneral\fP > \fBregisterData\fP"
.br
.RI "registerData "
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
The \fBSegmentTimeGeneral\fP class\&. 
.PP
Definition at line 19 of file segment_time_general\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "DataParameter::SegmentTimeGeneral::SegmentTimeGeneral ()"

.PP
\fBSegmentTimeGeneral\fP\&. 
.PP
Definition at line 5 of file segment_time_general\&.cpp\&.
.SS "DataParameter::SegmentTimeGeneral::SegmentTimeGeneral (const int & numSegments)"

.PP
\fBSegmentTimeGeneral\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fInumSegments\fP 
.RE
.PP

.PP
Definition at line 11 of file segment_time_general\&.cpp\&.
.SS "DataParameter::SegmentTimeGeneral::SegmentTimeGeneral (const \fBSegmentTimeGeneral\fP & obj)"

.PP
\fBSegmentTimeGeneral\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIobj\fP 
.RE
.PP

.PP
Definition at line 18 of file segment_time_general\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "void DataParameter::SegmentTimeGeneral::appendRegisterData (const \fBSegmentTimeDataGeneral\fP & data)"

.PP
appendRegisterData 
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP 
.RE
.PP

.PP
Definition at line 95 of file segment_time_general\&.cpp\&.
.SS "QByteArray DataParameter::SegmentTimeGeneral::getByteArray () const\fC [virtual]\fP"

.PP
getByteArray 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Implements \fBDataParameter::AbstractParameter\fP\&.
.PP
Definition at line 24 of file segment_time_general\&.cpp\&.
.SS "std::string DataParameter::SegmentTimeGeneral::getDescription () const\fC [virtual]\fP"

.PP
getDescription 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Implements \fBDataParameter::AbstractParameter\fP\&.
.PP
Definition at line 47 of file segment_time_general\&.cpp\&.
.SS "\fBParameterType\fP DataParameter::SegmentTimeGeneral::getParameterType () const\fC [virtual]\fP"

.PP
getParameterType 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Implements \fBDataParameter::AbstractParameter\fP\&.
.PP
Definition at line 53 of file segment_time_general\&.cpp\&.
.SS "void DataParameter::SegmentTimeGeneral::initializeData ()"

.PP
initializeData 
.PP
Definition at line 84 of file segment_time_general\&.cpp\&.
.SS "bool DataParameter::SegmentTimeGeneral::operator!= (const \fBSegmentTimeGeneral\fP & rhs)\fC [inline]\fP"

.PP
operator != 
.PP
\fBParameters:\fP
.RS 4
\fIrhs\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 127 of file segment_time_general\&.h\&.
.SS "void DataParameter::SegmentTimeGeneral::operator= (const \fBSegmentTimeGeneral\fP & rhs)\fC [inline]\fP"

.PP
operator = 
.PP
\fBParameters:\fP
.RS 4
\fIrhs\fP 
.RE
.PP

.PP
Definition at line 96 of file segment_time_general\&.h\&.
.SS "bool DataParameter::SegmentTimeGeneral::operator== (const \fBSegmentTimeGeneral\fP & rhs)\fC [inline]\fP"

.PP
operator == 
.PP
\fBParameters:\fP
.RS 4
\fIrhs\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 108 of file segment_time_general\&.h\&.
.SS "void DataParameter::SegmentTimeGeneral::setNumberofSequentialRegisters (const uint8_t & seqSegment)"

.PP
setNumberofSequentialRegisters 
.PP
\fBParameters:\fP
.RS 4
\fIseqSegment\fP 
.RE
.PP

.PP
Definition at line 67 of file segment_time_general\&.cpp\&.
.SS "void DataParameter::SegmentTimeGeneral::setStartingRegister (const uint8_t & startSegment)"

.PP
setStartingRegister 
.PP
\fBParameters:\fP
.RS 4
\fIstartSegment\fP 
.RE
.PP

.PP
Definition at line 58 of file segment_time_general\&.cpp\&.
.SS "void DataParameter::SegmentTimeGeneral::updateRegisterData (const int & registerIndex, const \fBSegmentTimeDataGeneral\fP & data)"

.PP
updateRegisterData 
.PP
\fBParameters:\fP
.RS 4
\fIregisterIndex\fP 
.br
\fIdata\fP 
.RE
.PP

.PP
Definition at line 79 of file segment_time_general\&.cpp\&.
.SH "Member Data Documentation"
.PP 
.SS "uint8_t DataParameter::SegmentTimeGeneral::numSeqSegments\fC [private]\fP"

.PP
numSeqSegments 
.PP
Definition at line 135 of file segment_time_general\&.h\&.
.SS "std::vector<\fBDataParameter::SegmentTimeDataGeneral\fP> DataParameter::SegmentTimeGeneral::registerData\fC [private]\fP"

.PP
registerData 
.PP
Definition at line 140 of file segment_time_general\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for ECM Control System from the source code\&.

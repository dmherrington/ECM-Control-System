.TH "DataParameter" 3 "Tue Jun 20 2017" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DataParameter
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBAbstractParameter\fP"
.br
.RI "The \fBAbstractParameter\fP class\&. "
.ti -1c
.RI "class \fBParameterMemoryWrite\fP"
.br
.RI "The \fBParameterMemoryWrite\fP class\&. "
.ti -1c
.RI "class \fBSegmentCurrentSetpoint\fP"
.br
.RI "The \fBSegmentCurrentSetpoint\fP class\&. "
.ti -1c
.RI "class \fBSegmentTimeDataDetailed\fP"
.br
.RI "The \fBSegmentTimeDataDetailed\fP class is the class that the user should implement when establishing a segments data\&. The data contained in here shall be mapped later on to the correct levels and establish the necessary current/voltage messages for interacting with the munk power supply\&. "
.ti -1c
.RI "class \fBSegmentTimeDataGeneral\fP"
.br
.RI "The \fBSegmentTimeDataGeneral\fP class\&. "
.ti -1c
.RI "class \fBSegmentTimeDetailed\fP"
.br
.RI "The \fBSegmentTimeDetailed\fP class\&. "
.ti -1c
.RI "class \fBSegmentTimeGeneral\fP"
.br
.RI "The \fBSegmentTimeGeneral\fP class\&. "
.ti -1c
.RI "class \fBSegmentVoltageSetpoint\fP"
.br
.RI "The \fBSegmentVoltageSetpoint\fP class\&. "
.in -1c
.SS "Typedefs"

.in +1c
.ti -1c
.RI "typedef unsigned int \fBWORD\fP"
.br
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBParameterType\fP { \fBParameterType::SEGMENTTIMES\fP, \fBParameterType::PATTERNWRITECOMMAND\fP, \fBParameterType::CURRENTSETPOINT\fP, \fBParameterType::MEMORYWRITE\fP, \fBParameterType::VOLTAGESETPOINT\fP }"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "std::string \fBParameterTypeToString\fP (const \fBParameterType\fP &type)"
.br
.ti -1c
.RI "\fBParameterType\fP \fBParameterTypeFromString\fP (const std::string &str)"
.br
.ti -1c
.RI "int \fBParameterTypeToInt\fP (const \fBParameterType\fP &type)"
.br
.ti -1c
.RI "std::vector< std::string > \fBgetListOfParameterTypes\fP ()"
.br
.ti -1c
.RI "\fBParameterType\fP \fBParameterTypeFromInt\fP (const int &param)"
.br
.in -1c
.SH "Typedef Documentation"
.PP 
.SS "typedef unsigned int \fBDataParameter::WORD\fP"

.PP
Definition at line 15 of file abstract_parameter\&.h\&.
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBDataParameter::ParameterType\fP\fC [strong]\fP"

.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fISEGMENTTIMES \fP\fP
.TP
\fB\fIPATTERNWRITECOMMAND \fP\fP
.TP
\fB\fICURRENTSETPOINT \fP\fP
.TP
\fB\fIMEMORYWRITE \fP\fP
.TP
\fB\fIVOLTAGESETPOINT \fP\fP
.PP
Definition at line 11 of file type_definition\&.h\&.
.SH "Function Documentation"
.PP 
.SS "std::vector<std::string> DataParameter::getListOfParameterTypes ()\fC [inline]\fP"

.PP
Definition at line 51 of file type_definition\&.h\&.
.SS "\fBParameterType\fP DataParameter::ParameterTypeFromInt (const int & param)\fC [inline]\fP"

.PP
Definition at line 59 of file type_definition\&.h\&.
.SS "\fBParameterType\fP DataParameter::ParameterTypeFromString (const std::string & str)\fC [inline]\fP"

.PP
Definition at line 30 of file type_definition\&.h\&.
.SS "int DataParameter::ParameterTypeToInt (const \fBParameterType\fP & type)\fC [inline]\fP"

.PP
Definition at line 39 of file type_definition\&.h\&.
.SS "std::string DataParameter::ParameterTypeToString (const \fBParameterType\fP & type)\fC [inline]\fP"

.PP
Definition at line 19 of file type_definition\&.h\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.

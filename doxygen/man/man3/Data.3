.TH "Data" 3 "Tue Jun 20 2017" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Data
.SH SYNOPSIS
.br
.PP
.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBRegisterDataObject\fP"
.br
.RI "The \fBRegisterDataObject\fP class\&. "
.in -1c
.SS "Enumerations"

.in +1c
.ti -1c
.RI "enum \fBFaultCodesRegister1\fP { \fBFaultCodesRegister1::ERR_FR1_DCLINK_OFF\fP = 1, \fBFaultCodesRegister1::ERR_FR1_DSP_PWM1_GENERATOR\fP = 2, \fBFaultCodesRegister1::ERR_FR1_DSP_PWM2_GENERATOR\fP = 4, \fBFaultCodesRegister1::ERR_FR1_DSP_ERROR\fP = 8, \fBFaultCodesRegister1::ERR_FR1_DSP_PIC_DEAD\fP = 16, \fBFaultCodesRegister1::ERR_FR1_DSP_TICKCOUNT_ERROR\fP = 32, \fBFaultCodesRegister1::ERR_FR1_INTERNAL_ERROR\fP = 64, \fBFaultCodesRegister1::ERR_FR1_EXTCOMM2\fP = 128, \fBFaultCodesRegister1::ERR_FR1_CHARGING\fP = 256, \fBFaultCodesRegister1::ERR_FR1_TEMP_POWERBOARD\fP = 512, \fBFaultCodesRegister1::ERR_FR1_EXTCOMM1\fP = 1024, \fBFaultCodesRegister1::ERR_FR1_SYNCHRO\fP = 2048, \fBFaultCodesRegister1::ERR_FR1_TEMP_MAINSCONTROLLER\fP = 4096, \fBFaultCodesRegister1::ERR_FR1_ZEROBATCH\fP = 8192, \fBFaultCodesRegister1::ERR_FR1_GENERAL_OVERCURRENT\fP = 16384, \fBFaultCodesRegister1::ERR_FR1_GENERAL_OVERVOLTAGE\fP = 32768 }
.RI "The CurrentFactorType enum\&. ""
.br
.ti -1c
.RI "enum \fBFaultCodesRegister3\fP { \fBFaultCodesRegister3::ERR_FR3_EXTERNAL_TRIP1\fP = 1, \fBFaultCodesRegister3::ERR_FR3_EXTERNAL_TRIP2\fP = 2, \fBFaultCodesRegister3::ERR_FR3_PLD_PWM_GENERATOR1\fP = 4, \fBFaultCodesRegister3::ERR_FR3_PLD_PWM_GENERATOR2\fP = 8, \fBFaultCodesRegister3::ERR_FR3_LOST_FIELDBUS\fP = 16, \fBFaultCodesRegister3::ERR_FR3_DYNAMIC_OVERCURRENT\fP = 32, \fBFaultCodesRegister3::ERR_FR3_RESERVED_7\fP = 64, \fBFaultCodesRegister3::ERR_FR3_RESERVED_8\fP = 128, \fBFaultCodesRegister3::ERR_FR3_RESERVED_9\fP = 256, \fBFaultCodesRegister3::ERR_FR3_RESERVED_10\fP = 512, \fBFaultCodesRegister3::ERR_FR3_RESERVED_11\fP = 1024, \fBFaultCodesRegister3::ERR_FR3_RESERVED_12\fP = 2048, \fBFaultCodesRegister3::ERR_FR3_RESERVED_13\fP = 4096, \fBFaultCodesRegister3::ERR_FR3_RESERVED_14\fP = 8192, \fBFaultCodesRegister3::ERR_FR3_RESERVED_15\fP = 16384, \fBFaultCodesRegister3::ERR_FR3_RESERVED_16\fP = 32768 }
.RI "The CurrentFactorType enum\&. ""
.br
.ti -1c
.RI "enum \fBFaultCodesRegister2\fP { \fBFaultCodesRegister2::ERR_FR2_AMPHOURCHECKSUM\fP = 1, \fBFaultCodesRegister2::ERR_FR2_INT_EEPROM\fP = 2, \fBFaultCodesRegister2::ERR_FR2_EXT_EEPROM\fP = 4, \fBFaultCodesRegister2::ERR_FR2_EEPROM_FORMAT\fP = 8, \fBFaultCodesRegister2::ERR_FR2_BATCH_READ\fP = 16, \fBFaultCodesRegister2::ERR_FR2_BATCH_WRITE\fP = 32, \fBFaultCodesRegister2::ERR_FR2_PATTERN_READ\fP = 64, \fBFaultCodesRegister2::ERR_FR2_PATTERN_WRITE\fP = 128, \fBFaultCodesRegister2::ERR_FR2_IDCLINK_IXT_TRIP1\fP = 256, \fBFaultCodesRegister2::ERR_FR2_CONTROLSUPPLY\fP = 512, \fBFaultCodesRegister2::ERR_FR2_DCLINK1\fP = 1024, \fBFaultCodesRegister2::ERR_FR2_PLD_1_5_SUPPLY\fP = 2048, \fBFaultCodesRegister2::ERR_FR2_IDCLINK_IXT_TRIP2\fP = 4096, \fBFaultCodesRegister2::ERR_FR2_DCLINK2\fP = 8192, \fBFaultCodesRegister2::ERR_FR2_RESERVED\fP = 16384, \fBFaultCodesRegister2::ERR_FR2_SET_CURRENT_EXCEEDED\fP = 32768 }
.RI "The CurrentFactorType enum\&. ""
.br
.ti -1c
.RI "enum \fBCurrentFactorType\fP { \fBCurrentFactorType::AMPS\fP = 0, \fBCurrentFactorType::A_DM2\fP = 1 }
.RI "The CurrentFactorType enum\&. ""
.br
.ti -1c
.RI "enum \fBCurrentSetFWDType\fP { \fBCurrentSetFWDType::CurrentFWD1\fP = 6000, \fBCurrentSetFWDType::CurrentFWD2\fP = 6040, \fBCurrentSetFWDType::CurrentFWD3\fP = 6080, \fBCurrentSetFWDType::CurrentFWD4\fP = 6120, \fBCurrentSetFWDType::CurrentFWD5\fP = 6160, \fBCurrentSetFWDType::CurrentFWD6\fP = 6200, \fBCurrentSetFWDType::CurrentFWD7\fP = 6240, \fBCurrentSetFWDType::CurrentFWD8\fP = 6280 }
.RI "The CurrentSetFWDType enum\&. ""
.br
.ti -1c
.RI "enum \fBCurrentSetREVType\fP { \fBCurrentSetREVType::CurrentREV1\fP = 6020, \fBCurrentSetREVType::CurrentREV2\fP = 6060, \fBCurrentSetREVType::CurrentREV3\fP = 6100, \fBCurrentSetREVType::CurrentREV4\fP = 6140, \fBCurrentSetREVType::CurrentREV5\fP = 6180, \fBCurrentSetREVType::CurrentREV6\fP = 6220, \fBCurrentSetREVType::CurrentREV7\fP = 6260, \fBCurrentSetREVType::CurrentREV8\fP = 6300 }
.RI "The CurrentSetREVType enum\&. ""
.br
.ti -1c
.RI "enum \fBSegmentVIPower\fP { \fBSegmentVIPower::ONE\fP = 0, \fBSegmentVIPower::ONE_HUNDREDTH\fP = 1, \fBSegmentVIPower::ONE_TENTH\fP = 2, \fBSegmentVIPower::TEN\fP = 3, \fBSegmentVIPower::ONE_HUNDRED\fP = 5 }
.RI "The SegmentVIPower enum\&. ""
.br
.ti -1c
.RI "enum \fBSegmentPower\fP { \fBSegmentPower::ONE\fP = 0, \fBSegmentPower::TEN\fP = 1, \fBSegmentPower::ONE_HUNDRED\fP = 2, \fBSegmentPower::ONE_THOUSAND\fP = 3, \fBSegmentPower::TEN_THOUSAND\fP = 4 }
.RI "The SegmentPower enum\&. ""
.br
.ti -1c
.RI "enum \fBReadWriteType\fP { \fBReadWriteType::READ\fP = 03, \fBReadWriteType::WRITE\fP = 16 }
.RI "The ReadWriteType enum\&. ""
.br
.ti -1c
.RI "enum \fBTypeResponseException\fP { \fBTypeResponseException::ILLEGAL_FUNCTION\fP = 0, \fBTypeResponseException::ILLEGAL_DATA_ADDRESS\fP = 1, \fBTypeResponseException::ILLEGAL_DATA_VALUE\fP = 2 }
.RI "The TypeResponseException enum\&. ""
.br
.ti -1c
.RI "enum \fBSegmentLevel\fP { \fBSegmentLevel::LEVEL1\fP = 0, \fBSegmentLevel::LEVEL2\fP = 1, \fBSegmentLevel::LEVEL3\fP = 2, \fBSegmentLevel::LEVEL4\fP = 3, \fBSegmentLevel::LEVEL5\fP = 4, \fBSegmentLevel::LEVEL6\fP = 5, \fBSegmentLevel::LEVEL7\fP = 6, \fBSegmentLevel::LEVEL8\fP = 7 }
.RI "The SegmentLevel enum\&. ""
.br
.ti -1c
.RI "enum \fBSegmentMode\fP { \fBSegmentMode::DEAD\fP = 0, \fBSegmentMode::FORWARD\fP = 1, \fBSegmentMode::REVERSE\fP = 2, \fBSegmentMode::ILLEGAL\fP = 3, \fBSegmentMode::HIZ\fP = 4 }
.RI "The SegmentMode enum\&. ""
.br
.ti -1c
.RI "enum \fBSegmentParameter\fP { \fBSegmentParameter::SEGMENT1\fP = 4170, \fBSegmentParameter::SEGMENT2\fP = 4171, \fBSegmentParameter::SEGMENT3\fP = 4172, \fBSegmentParameter::SEGMENT4\fP = 4173, \fBSegmentParameter::SEGMENT5\fP = 4174, \fBSegmentParameter::SEGMENT6\fP = 4175, \fBSegmentParameter::SEGMENT7\fP = 4176, \fBSegmentParameter::SEGMENT8\fP = 4178, \fBSegmentParameter::SEGMENT9\fP = 4179, \fBSegmentParameter::SEGMENT10\fP = 4180, \fBSegmentParameter::SEGMENT11\fP = 4181, \fBSegmentParameter::SEGMENT12\fP = 4182, \fBSegmentParameter::SEGMENT13\fP = 4183, \fBSegmentParameter::SEGMENT14\fP = 4184, \fBSegmentParameter::SEGMENT15\fP = 4185, \fBSegmentParameter::SEGMENT16\fP = 4186 }
.RI "The SegmentParameter enum\&. ""
.br
.ti -1c
.RI "enum \fBVoltageSetFWDType\fP { \fBVoltageSetFWDType::VoltageFWD1\fP = 6500, \fBVoltageSetFWDType::VoltageFWD2\fP = 6540, \fBVoltageSetFWDType::VoltageFWD3\fP = 6580, \fBVoltageSetFWDType::VoltageFWD4\fP = 6620, \fBVoltageSetFWDType::VoltageFWD5\fP = 6660, \fBVoltageSetFWDType::VoltageFWD6\fP = 6700, \fBVoltageSetFWDType::VoltageFWD7\fP = 6740, \fBVoltageSetFWDType::VoltageFWD8\fP = 6780 }
.RI "The VoltageSetFWDType enum\&. ""
.br
.ti -1c
.RI "enum \fBVoltageSetREVType\fP { \fBVoltageSetREVType::VoltageREV1\fP = 6520, \fBVoltageSetREVType::VoltageREV2\fP = 6560, \fBVoltageSetREVType::VoltageREV3\fP = 6600, \fBVoltageSetREVType::VoltageREV4\fP = 6640, \fBVoltageSetREVType::VoltageREV5\fP = 6680, \fBVoltageSetREVType::VoltageREV6\fP = 6720, \fBVoltageSetREVType::VoltageREV7\fP = 6760, \fBVoltageSetREVType::VoltageREV8\fP = 6800 }
.RI "The VoltageSetREVType enum\&. ""
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "std::string \fBCurrentFactorToString\fP (const \fBCurrentFactorType\fP &type)"
.br
.RI "CurrentFactorToString\&. "
.ti -1c
.RI "\fBCurrentFactorType\fP \fBCurrentFactorFromString\fP (const std::string &str)"
.br
.RI "CurrentFactorFromString\&. "
.ti -1c
.RI "std::vector< std::string > \fBgetListOfCurrentFactor\fP ()"
.br
.RI "getListOfCurrentFactor "
.ti -1c
.RI "std::string \fBCurrentSetFWDTypeToString\fP (const \fBCurrentSetFWDType\fP &type)"
.br
.RI "CurrentSetFWDTypeToString\&. "
.ti -1c
.RI "\fBCurrentSetFWDType\fP \fBCurrentSetFWDTypeFromString\fP (const std::string &str)"
.br
.RI "CurrentSetFWDTypeFromString\&. "
.ti -1c
.RI "std::vector< \fBCurrentSetFWDType\fP > \fBgetListOfCurrentSetFWDTypes\fP ()"
.br
.RI "getListOfCurrentSetFWDTypes "
.ti -1c
.RI "\fBData::CurrentSetFWDType\fP \fBgetREVCurrentIndex\fP (const int &index)"
.br
.RI "getREVCurrentIndex "
.ti -1c
.RI "std::string \fBCurrentSetREVTypeToString\fP (const \fBCurrentSetREVType\fP &type)"
.br
.RI "CurrentSetREVTypeToString\&. "
.ti -1c
.RI "\fBCurrentSetREVType\fP \fBCurrentSetREVTypeFromString\fP (const std::string &str)"
.br
.RI "CurrentSetREVTypeFromString\&. "
.ti -1c
.RI "std::vector< \fBCurrentSetREVType\fP > \fBgetListOfCurrentSetREVTypes\fP ()"
.br
.RI "getListOfCurrentSetREVTypes "
.ti -1c
.RI "std::string \fBSegmentVIPowerToString\fP (const \fBSegmentVIPower\fP &type)"
.br
.RI "SegmentVIPowerToString\&. "
.ti -1c
.RI "\fBSegmentVIPower\fP \fBSegmentVIPowerFromString\fP (const std::string &str)"
.br
.RI "SegmentVIPowerFromString\&. "
.ti -1c
.RI "std::vector< std::string > \fBgetListOfSegmentVIPower\fP ()"
.br
.RI "getListOfSegmentVIPower "
.ti -1c
.RI "uint32_t \fBSegmenVIPowerToBitArray\fP (const \fBSegmentVIPower\fP &type, const uint32_t &bitArray)"
.br
.RI "SegmenVIPowerToBitArray\&. "
.ti -1c
.RI "std::string \fBSegmentPowerToString\fP (const \fBSegmentPower\fP &type)"
.br
.RI "SegmentPowerToString\&. "
.ti -1c
.RI "\fBSegmentPower\fP \fBSegmentPowerFromString\fP (const std::string &str)"
.br
.RI "SegmentPowerFromString\&. "
.ti -1c
.RI "std::vector< std::string > \fBgetListOfSegmentPower\fP ()"
.br
.RI "getListOfSegmentPower "
.ti -1c
.RI "uint32_t \fBSegmentPowerToBitArray\fP (const \fBSegmentPower\fP &type, const uint32_t &bitArray)"
.br
.RI "SegmentPowerToBitArray\&. "
.ti -1c
.RI "std::string \fBReadWriteTypeToString\fP (const \fBReadWriteType\fP &type)"
.br
.RI "ReadWriteTypeToString\&. "
.ti -1c
.RI "\fBReadWriteType\fP \fBReadWriteTypeFromString\fP (const std::string &str)"
.br
.RI "ReadWriteTypeFromString\&. "
.ti -1c
.RI "std::vector< std::string > \fBgetListOfReadWriteType\fP ()"
.br
.RI "getListOfReadWriteType "
.ti -1c
.RI "std::string \fBTypeResponseExceptionToString\fP (const \fBTypeResponseException\fP &type)"
.br
.RI "TypeResponseExceptionToString\&. "
.ti -1c
.RI "\fBTypeResponseException\fP \fBTypeResponseExceptionFromString\fP (const std::string &str)"
.br
.RI "TypeResponseExceptionFromString\&. "
.ti -1c
.RI "std::vector< std::string > \fBgetListOfTypeResponseException\fP ()"
.br
.RI "getListOfTypeResponseException "
.ti -1c
.RI "std::string \fBSegmentLevelToString\fP (const \fBSegmentLevel\fP &type)"
.br
.RI "SegmentLevelToString\&. "
.ti -1c
.RI "\fBSegmentLevel\fP \fBSegmentLevelFromString\fP (const std::string &str)"
.br
.RI "SegmentLevelFromString\&. "
.ti -1c
.RI "std::vector< std::string > \fBgetListOfSegmentLevel\fP ()"
.br
.RI "getListOfSegmentLevel "
.ti -1c
.RI "uint32_t \fBSegmentLevelToBitArray\fP (const \fBSegmentLevel\fP &type, const uint32_t &bitArray)"
.br
.RI "SegmentLevelToBitArray\&. "
.ti -1c
.RI "std::string \fBSegmentModeToString\fP (const \fBSegmentMode\fP &type)"
.br
.RI "SegmentModeToString\&. "
.ti -1c
.RI "\fBSegmentMode\fP \fBSegmentModeFromString\fP (const std::string &str)"
.br
.RI "SegmentModeFromString\&. "
.ti -1c
.RI "uint32_t \fBSegmentModeToBitArray\fP (const \fBSegmentMode\fP &type, const uint32_t &bitArray)"
.br
.RI "SegmentModeToBitArray\&. "
.ti -1c
.RI "std::vector< std::string > \fBgetListOfSegmentMode\fP ()"
.br
.RI "getListOfSegmentMode "
.ti -1c
.RI "std::string \fBVoltageSetFWDTypeToString\fP (const \fBVoltageSetFWDType\fP &type)"
.br
.RI "VoltageSetFWDTypeToString\&. "
.ti -1c
.RI "\fBVoltageSetFWDType\fP \fBVoltageSetFWDTypeFromString\fP (const std::string &str)"
.br
.RI "VoltageSetFWDTypeFromString\&. "
.ti -1c
.RI "std::vector< \fBVoltageSetFWDType\fP > \fBgetListOfVoltageSetFWDTypes\fP ()"
.br
.RI "getListOfVoltageSetFWDTypes "
.ti -1c
.RI "\fBData::VoltageSetFWDType\fP \fBgetFWDVoltageIndex\fP (const int &index)"
.br
.RI "getFWDVoltageIndex "
.ti -1c
.RI "std::string \fBVoltageSetREVTypeToString\fP (const \fBVoltageSetREVType\fP &type)"
.br
.RI "VoltageSetREVTypeToString\&. "
.ti -1c
.RI "\fBVoltageSetREVType\fP \fBVoltageSetREVTypeFromString\fP (const std::string &str)"
.br
.RI "VoltageSetREVTypeFromString\&. "
.ti -1c
.RI "std::vector< \fBVoltageSetREVType\fP > \fBgetListOfVoltageSetREVTypes\fP ()"
.br
.RI "getListOfVoltageSetREVTypes "
.ti -1c
.RI "\fBData::VoltageSetREVType\fP \fBgetREVVoltageIndex\fP (const int &index)"
.br
.RI "getREVVoltageIndex "
.in -1c
.SH "Enumeration Type Documentation"
.PP 
.SS "enum \fBData::CurrentFactorType\fP\fC [strong]\fP"

.PP
The CurrentFactorType enum\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIAMPS \fP\fP
.TP
\fB\fIA_DM2 \fP\fP
.PP
Definition at line 14 of file type_current_factor\&.h\&.
.SS "enum \fBData::CurrentSetFWDType\fP\fC [strong]\fP"

.PP
The CurrentSetFWDType enum\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fICurrentFWD1 \fP\fP
.TP
\fB\fICurrentFWD2 \fP\fP
.TP
\fB\fICurrentFWD3 \fP\fP
.TP
\fB\fICurrentFWD4 \fP\fP
.TP
\fB\fICurrentFWD5 \fP\fP
.TP
\fB\fICurrentFWD6 \fP\fP
.TP
\fB\fICurrentFWD7 \fP\fP
.TP
\fB\fICurrentFWD8 \fP\fP
.PP
Definition at line 18 of file type_current_set\&.h\&.
.SS "enum \fBData::CurrentSetREVType\fP\fC [strong]\fP"

.PP
The CurrentSetREVType enum\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fICurrentREV1 \fP\fP
.TP
\fB\fICurrentREV2 \fP\fP
.TP
\fB\fICurrentREV3 \fP\fP
.TP
\fB\fICurrentREV4 \fP\fP
.TP
\fB\fICurrentREV5 \fP\fP
.TP
\fB\fICurrentREV6 \fP\fP
.TP
\fB\fICurrentREV7 \fP\fP
.TP
\fB\fICurrentREV8 \fP\fP
.PP
Definition at line 116 of file type_current_set\&.h\&.
.SS "enum \fBData::FaultCodesRegister1\fP\fC [strong]\fP"

.PP
The CurrentFactorType enum\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIERR_FR1_DCLINK_OFF \fP\fP
.TP
\fB\fIERR_FR1_DSP_PWM1_GENERATOR \fP\fP
.TP
\fB\fIERR_FR1_DSP_PWM2_GENERATOR \fP\fP
.TP
\fB\fIERR_FR1_DSP_ERROR \fP\fP
.TP
\fB\fIERR_FR1_DSP_PIC_DEAD \fP\fP
.TP
\fB\fIERR_FR1_DSP_TICKCOUNT_ERROR \fP\fP
.TP
\fB\fIERR_FR1_INTERNAL_ERROR \fP\fP
.TP
\fB\fIERR_FR1_EXTCOMM2 \fP\fP
.TP
\fB\fIERR_FR1_CHARGING \fP\fP
.TP
\fB\fIERR_FR1_TEMP_POWERBOARD \fP\fP
.TP
\fB\fIERR_FR1_EXTCOMM1 \fP\fP
.TP
\fB\fIERR_FR1_SYNCHRO \fP\fP
.TP
\fB\fIERR_FR1_TEMP_MAINSCONTROLLER \fP\fP
.TP
\fB\fIERR_FR1_ZEROBATCH \fP\fP
.TP
\fB\fIERR_FR1_GENERAL_OVERCURRENT \fP\fP
.TP
\fB\fIERR_FR1_GENERAL_OVERVOLTAGE \fP\fP
.PP
Definition at line 15 of file fault_codes_register_one\&.h\&.
.SS "enum \fBData::FaultCodesRegister2\fP\fC [strong]\fP"

.PP
The CurrentFactorType enum\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIERR_FR2_AMPHOURCHECKSUM \fP\fP
AmpHour variables are corrupt 
.TP
\fB\fIERR_FR2_INT_EEPROM \fP\fP
Internal eeprom data invalid 
.TP
\fB\fIERR_FR2_EXT_EEPROM \fP\fP
External eeprom data invalid 
.TP
\fB\fIERR_FR2_EEPROM_FORMAT \fP\fP
Eeprom has been formatted (Format operation=0010) 
.TP
\fB\fIERR_FR2_BATCH_READ \fP\fP
Crc check invaldid when reading batch from eeprom or BatchReadCommand (prm 4210) > 16 
.TP
\fB\fIERR_FR2_BATCH_WRITE \fP\fP
Pattern No (prm 4200) zero when writing the batch to memory/eeporm or BatchWriteCommand (prm 4211) > 16\&. 
.TP
\fB\fIERR_FR2_PATTERN_READ \fP\fP
Crc check invalid when reading pattern from eeprom or PatReadCommand (prm 4190) > 16 
.TP
\fB\fIERR_FR2_PATTERN_WRITE \fP\fP
Pattern set invalid when writing to memory/eeprom or BatchWriteCommand (prm 4191) > 16 
.TP
\fB\fIERR_FR2_IDCLINK_IXT_TRIP1 \fP\fP
Tripped on primary DClink current Ixt 
.TP
\fB\fIERR_FR2_CONTROLSUPPLY \fP\fP
Control voltage timed out on threshold of CtrlVoltageThreshold parameter (9200) 
.TP
\fB\fIERR_FR2_DCLINK1 \fP\fP
Primary Dclink voltage too low 
.TP
\fB\fIERR_FR2_PLD_1_5_SUPPLY \fP\fP
DSP measured that the 1\&.5V supply of the PWM generators (PLD's) are too low 
.TP
\fB\fIERR_FR2_IDCLINK_IXT_TRIP2 \fP\fP
Tripped on secundary DClink current Ixt 
.TP
\fB\fIERR_FR2_DCLINK2 \fP\fP
Secundary Dclink voltage too low 
.TP
\fB\fIERR_FR2_RESERVED \fP\fP
.TP
\fB\fIERR_FR2_SET_CURRENT_EXCEEDED \fP\fP
Current set point value is too high 
.PP
Definition at line 14 of file fault_codes_register_two\&.h\&.
.SS "enum \fBData::FaultCodesRegister3\fP\fC [strong]\fP"

.PP
The CurrentFactorType enum\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIERR_FR3_EXTERNAL_TRIP1 \fP\fP
External Trip #1 
.TP
\fB\fIERR_FR3_EXTERNAL_TRIP2 \fP\fP
External Trip #2 
.TP
\fB\fIERR_FR3_PLD_PWM_GENERATOR1 \fP\fP
IO controller did not find PWM generator #1, Fatal Error not resettable 
.TP
\fB\fIERR_FR3_PLD_PWM_GENERATOR2 \fP\fP
IO controller did not find PWM generator #2, Fatal Error not resettable 
.TP
\fB\fIERR_FR3_LOST_FIELDBUS \fP\fP
Lost communication with field bus 
.TP
\fB\fIERR_FR3_DYNAMIC_OVERCURRENT \fP\fP
A dynamic overcurrent occurred see prm 4600\&.\&.4603 
.TP
\fB\fIERR_FR3_RESERVED_7 \fP\fP
.TP
\fB\fIERR_FR3_RESERVED_8 \fP\fP
.TP
\fB\fIERR_FR3_RESERVED_9 \fP\fP
.TP
\fB\fIERR_FR3_RESERVED_10 \fP\fP
.TP
\fB\fIERR_FR3_RESERVED_11 \fP\fP
.TP
\fB\fIERR_FR3_RESERVED_12 \fP\fP
.TP
\fB\fIERR_FR3_RESERVED_13 \fP\fP
.TP
\fB\fIERR_FR3_RESERVED_14 \fP\fP
.TP
\fB\fIERR_FR3_RESERVED_15 \fP\fP
.TP
\fB\fIERR_FR3_RESERVED_16 \fP\fP
.PP
Definition at line 14 of file fault_codes_register_three\&.h\&.
.SS "enum \fBData::ReadWriteType\fP\fC [strong]\fP"

.PP
The ReadWriteType enum\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIREAD \fP\fP
.TP
\fB\fIWRITE \fP\fP
.PP
Definition at line 14 of file type_read_write\&.h\&.
.SS "enum \fBData::SegmentLevel\fP\fC [strong]\fP"

.PP
The SegmentLevel enum\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fILEVEL1 \fP\fP
.TP
\fB\fILEVEL2 \fP\fP
.TP
\fB\fILEVEL3 \fP\fP
.TP
\fB\fILEVEL4 \fP\fP
.TP
\fB\fILEVEL5 \fP\fP
.TP
\fB\fILEVEL6 \fP\fP
.TP
\fB\fILEVEL7 \fP\fP
.TP
\fB\fILEVEL8 \fP\fP
.PP
Definition at line 14 of file type_segment_level\&.h\&.
.SS "enum \fBData::SegmentMode\fP\fC [strong]\fP"

.PP
The SegmentMode enum\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIDEAD \fP\fP
.TP
\fB\fIFORWARD \fP\fP
.TP
\fB\fIREVERSE \fP\fP
.TP
\fB\fIILLEGAL \fP\fP
.TP
\fB\fIHIZ \fP\fP
.PP
Definition at line 14 of file type_segment_mode\&.h\&.
.SS "enum \fBData::SegmentParameter\fP\fC [strong]\fP"

.PP
The SegmentParameter enum\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fISEGMENT1 \fP\fP
.TP
\fB\fISEGMENT2 \fP\fP
.TP
\fB\fISEGMENT3 \fP\fP
.TP
\fB\fISEGMENT4 \fP\fP
.TP
\fB\fISEGMENT5 \fP\fP
.TP
\fB\fISEGMENT6 \fP\fP
.TP
\fB\fISEGMENT7 \fP\fP
.TP
\fB\fISEGMENT8 \fP\fP
.TP
\fB\fISEGMENT9 \fP\fP
.TP
\fB\fISEGMENT10 \fP\fP
.TP
\fB\fISEGMENT11 \fP\fP
.TP
\fB\fISEGMENT12 \fP\fP
.TP
\fB\fISEGMENT13 \fP\fP
.TP
\fB\fISEGMENT14 \fP\fP
.TP
\fB\fISEGMENT15 \fP\fP
.TP
\fB\fISEGMENT16 \fP\fP
.PP
Definition at line 14 of file type_segment_parameter\&.h\&.
.SS "enum \fBData::SegmentPower\fP\fC [strong]\fP"

.PP
The SegmentPower enum\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIONE \fP\fP
.TP
\fB\fITEN \fP\fP
.TP
\fB\fIONE_HUNDRED \fP\fP
.TP
\fB\fIONE_THOUSAND \fP\fP
.TP
\fB\fITEN_THOUSAND \fP\fP
.PP
Definition at line 14 of file type_prescalar_power\&.h\&.
.SS "enum \fBData::SegmentVIPower\fP\fC [strong]\fP"

.PP
The SegmentVIPower enum\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIONE \fP\fP
.TP
\fB\fIONE_HUNDREDTH \fP\fP
.TP
\fB\fIONE_TENTH \fP\fP
.TP
\fB\fITEN \fP\fP
.TP
\fB\fIONE_HUNDRED \fP\fP
.PP
Definition at line 14 of file type_current_voltage_prescale\&.h\&.
.SS "enum \fBData::TypeResponseException\fP\fC [strong]\fP"

.PP
The TypeResponseException enum\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIILLEGAL_FUNCTION \fP\fP
The function code received in the query is not an allowable action for the slave\&. 
.TP
\fB\fIILLEGAL_DATA_ADDRESS \fP\fP
The data address received in the query is not an allowable address for the slave\&. 
.TP
\fB\fIILLEGAL_DATA_VALUE \fP\fP
A value contained in the query data field is not an allowable value for the slave\&. 
.PP
Definition at line 14 of file type_response_exception\&.h\&.
.SS "enum \fBData::VoltageSetFWDType\fP\fC [strong]\fP"

.PP
The VoltageSetFWDType enum\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIVoltageFWD1 \fP\fP
testing 
.TP
\fB\fIVoltageFWD2 \fP\fP
.TP
\fB\fIVoltageFWD3 \fP\fP
.TP
\fB\fIVoltageFWD4 \fP\fP
.TP
\fB\fIVoltageFWD5 \fP\fP
.TP
\fB\fIVoltageFWD6 \fP\fP
.TP
\fB\fIVoltageFWD7 \fP\fP
.TP
\fB\fIVoltageFWD8 \fP\fP
.PP
Definition at line 14 of file type_voltage_set\&.h\&.
.SS "enum \fBData::VoltageSetREVType\fP\fC [strong]\fP"

.PP
The VoltageSetREVType enum\&. 
.PP
\fBEnumerator\fP
.in +1c
.TP
\fB\fIVoltageREV1 \fP\fP
.TP
\fB\fIVoltageREV2 \fP\fP
.TP
\fB\fIVoltageREV3 \fP\fP
.TP
\fB\fIVoltageREV4 \fP\fP
.TP
\fB\fIVoltageREV5 \fP\fP
.TP
\fB\fIVoltageREV6 \fP\fP
.TP
\fB\fIVoltageREV7 \fP\fP
.TP
\fB\fIVoltageREV8 \fP\fP
.PP
Definition at line 112 of file type_voltage_set\&.h\&.
.SH "Function Documentation"
.PP 
.SS "\fBCurrentFactorType\fP Data::CurrentFactorFromString (const std::string & str)\fC [inline]\fP"

.PP
CurrentFactorFromString\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstr\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 40 of file type_current_factor\&.h\&.
.SS "std::string Data::CurrentFactorToString (const \fBCurrentFactorType\fP & type)\fC [inline]\fP"

.PP
CurrentFactorToString\&. 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 24 of file type_current_factor\&.h\&.
.SS "\fBCurrentSetFWDType\fP Data::CurrentSetFWDTypeFromString (const std::string & str)\fC [inline]\fP"

.PP
CurrentSetFWDTypeFromString\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstr\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 62 of file type_current_set\&.h\&.
.SS "std::string Data::CurrentSetFWDTypeToString (const \fBCurrentSetFWDType\fP & type)\fC [inline]\fP"

.PP
CurrentSetFWDTypeToString\&. 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 34 of file type_current_set\&.h\&.
.SS "\fBCurrentSetREVType\fP Data::CurrentSetREVTypeFromString (const std::string & str)\fC [inline]\fP"

.PP
CurrentSetREVTypeFromString\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstr\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 160 of file type_current_set\&.h\&.
.SS "std::string Data::CurrentSetREVTypeToString (const \fBCurrentSetREVType\fP & type)\fC [inline]\fP"

.PP
CurrentSetREVTypeToString\&. 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 132 of file type_current_set\&.h\&.
.SS "\fBData::VoltageSetFWDType\fP Data::getFWDVoltageIndex (const int & index)\fC [inline]\fP"

.PP
getFWDVoltageIndex 
.PP
\fBParameters:\fP
.RS 4
\fIindex\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 101 of file type_voltage_set\&.h\&.
.SS "std::vector<std::string> Data::getListOfCurrentFactor ()\fC [inline]\fP"

.PP
getListOfCurrentFactor 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 52 of file type_current_factor\&.h\&.
.SS "std::vector<\fBCurrentSetFWDType\fP> Data::getListOfCurrentSetFWDTypes ()\fC [inline]\fP"

.PP
getListOfCurrentSetFWDTypes 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 86 of file type_current_set\&.h\&.
.SS "std::vector<\fBCurrentSetREVType\fP> Data::getListOfCurrentSetREVTypes ()\fC [inline]\fP"

.PP
getListOfCurrentSetREVTypes 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 184 of file type_current_set\&.h\&.
.SS "std::vector< std::string > Data::getListOfReadWriteType ()\fC [inline]\fP"

.PP
getListOfReadWriteType 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 52 of file type_read_write\&.h\&.
.SS "std::vector<std::string> Data::getListOfSegmentLevel ()\fC [inline]\fP"

.PP
getListOfSegmentLevel 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 82 of file type_segment_level\&.h\&.
.SS "std::vector<std::string> Data::getListOfSegmentMode ()\fC [inline]\fP"

.PP
getListOfSegmentMode 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 85 of file type_segment_mode\&.h\&.
.SS "std::vector<std::string> Data::getListOfSegmentPower ()\fC [inline]\fP"

.PP
getListOfSegmentPower 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 67 of file type_prescalar_power\&.h\&.
.SS "std::vector<std::string> Data::getListOfSegmentVIPower ()\fC [inline]\fP"

.PP
getListOfSegmentVIPower 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 67 of file type_current_voltage_prescale\&.h\&.
.SS "std::vector<std::string> Data::getListOfTypeResponseException ()\fC [inline]\fP"

.PP
getListOfTypeResponseException 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 57 of file type_response_exception\&.h\&.
.SS "std::vector<\fBVoltageSetFWDType\fP> Data::getListOfVoltageSetFWDTypes ()\fC [inline]\fP"

.PP
getListOfVoltageSetFWDTypes 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 82 of file type_voltage_set\&.h\&.
.SS "std::vector<\fBVoltageSetREVType\fP> Data::getListOfVoltageSetREVTypes ()\fC [inline]\fP"

.PP
getListOfVoltageSetREVTypes 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 180 of file type_voltage_set\&.h\&.
.SS "\fBData::CurrentSetREVType\fP Data::getREVCurrentIndex (const int & index)\fC [inline]\fP"

.PP
getREVCurrentIndex 
.PP
\fBParameters:\fP
.RS 4
\fIindex\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 105 of file type_current_set\&.h\&.
.SS "\fBData::VoltageSetREVType\fP Data::getREVVoltageIndex (const int & index)\fC [inline]\fP"

.PP
getREVVoltageIndex 
.PP
\fBParameters:\fP
.RS 4
\fIindex\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 199 of file type_voltage_set\&.h\&.
.SS "\fBReadWriteType\fP Data::ReadWriteTypeFromString (const std::string & str)\fC [inline]\fP"

.PP
ReadWriteTypeFromString\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstr\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 40 of file type_read_write\&.h\&.
.SS "std::string Data::ReadWriteTypeToString (const \fBReadWriteType\fP & type)\fC [inline]\fP"

.PP
ReadWriteTypeToString\&. 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 24 of file type_read_write\&.h\&.
.SS "\fBSegmentLevel\fP Data::SegmentLevelFromString (const std::string & str)\fC [inline]\fP"

.PP
SegmentLevelFromString\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstr\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 58 of file type_segment_level\&.h\&.
.SS "uint32_t Data::SegmentLevelToBitArray (const \fBSegmentLevel\fP & type, const uint32_t & bitArray)\fC [inline]\fP"

.PP
SegmentLevelToBitArray\&. 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP 
.br
\fIbitArray\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 102 of file type_segment_level\&.h\&.
.SS "std::string Data::SegmentLevelToString (const \fBSegmentLevel\fP & type)\fC [inline]\fP"

.PP
SegmentLevelToString\&. 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 30 of file type_segment_level\&.h\&.
.SS "\fBSegmentMode\fP Data::SegmentModeFromString (const std::string & str)\fC [inline]\fP"

.PP
SegmentModeFromString\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstr\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 49 of file type_segment_mode\&.h\&.
.SS "uint32_t Data::SegmentModeToBitArray (const \fBSegmentMode\fP & type, const uint32_t & bitArray)\fC [inline]\fP"

.PP
SegmentModeToBitArray\&. 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP 
.br
\fIbitArray\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 69 of file type_segment_mode\&.h\&.
.SS "std::string Data::SegmentModeToString (const \fBSegmentMode\fP & type)\fC [inline]\fP"

.PP
SegmentModeToString\&. 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 27 of file type_segment_mode\&.h\&.
.SS "\fBSegmentPower\fP Data::SegmentPowerFromString (const std::string & str)\fC [inline]\fP"

.PP
SegmentPowerFromString\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstr\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 49 of file type_prescalar_power\&.h\&.
.SS "uint32_t Data::SegmentPowerToBitArray (const \fBSegmentPower\fP & type, const uint32_t & bitArray)\fC [inline]\fP"

.PP
SegmentPowerToBitArray\&. 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP 
.br
\fIbitArray\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 84 of file type_prescalar_power\&.h\&.
.SS "std::string Data::SegmentPowerToString (const \fBSegmentPower\fP & type)\fC [inline]\fP"

.PP
SegmentPowerToString\&. 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 27 of file type_prescalar_power\&.h\&.
.SS "\fBSegmentVIPower\fP Data::SegmentVIPowerFromString (const std::string & str)\fC [inline]\fP"

.PP
SegmentVIPowerFromString\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstr\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 49 of file type_current_voltage_prescale\&.h\&.
.SS "std::string Data::SegmentVIPowerToString (const \fBSegmentVIPower\fP & type)\fC [inline]\fP"

.PP
SegmentVIPowerToString\&. 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 27 of file type_current_voltage_prescale\&.h\&.
.SS "uint32_t Data::SegmenVIPowerToBitArray (const \fBSegmentVIPower\fP & type, const uint32_t & bitArray)\fC [inline]\fP"

.PP
SegmenVIPowerToBitArray\&. 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP 
.br
\fIbitArray\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 84 of file type_current_voltage_prescale\&.h\&.
.SS "\fBTypeResponseException\fP Data::TypeResponseExceptionFromString (const std::string & str)\fC [inline]\fP"

.PP
TypeResponseExceptionFromString\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstr\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 43 of file type_response_exception\&.h\&.
.SS "std::string Data::TypeResponseExceptionToString (const \fBTypeResponseException\fP & type)\fC [inline]\fP"

.PP
TypeResponseExceptionToString\&. 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 25 of file type_response_exception\&.h\&.
.SS "\fBVoltageSetFWDType\fP Data::VoltageSetFWDTypeFromString (const std::string & str)\fC [inline]\fP"

.PP
VoltageSetFWDTypeFromString\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstr\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 58 of file type_voltage_set\&.h\&.
.SS "std::string Data::VoltageSetFWDTypeToString (const \fBVoltageSetFWDType\fP & type)\fC [inline]\fP"

.PP
VoltageSetFWDTypeToString\&. 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 30 of file type_voltage_set\&.h\&.
.SS "\fBVoltageSetREVType\fP Data::VoltageSetREVTypeFromString (const std::string & str)\fC [inline]\fP"

.PP
VoltageSetREVTypeFromString\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstr\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 156 of file type_voltage_set\&.h\&.
.SS "std::string Data::VoltageSetREVTypeToString (const \fBVoltageSetREVType\fP & type)\fC [inline]\fP"

.PP
VoltageSetREVTypeToString\&. 
.PP
\fBParameters:\fP
.RS 4
\fItype\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 128 of file type_voltage_set\&.h\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.

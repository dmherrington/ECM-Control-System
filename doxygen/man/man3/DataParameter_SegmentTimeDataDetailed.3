.TH "DataParameter::SegmentTimeDataDetailed" 3 "Tue Jun 20 2017" "My Project" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DataParameter::SegmentTimeDataDetailed \- The \fBSegmentTimeDataDetailed\fP class is the class that the user should implement when establishing a segments data\&. The data contained in here shall be mapped later on to the correct levels and establish the necessary current/voltage messages for interacting with the munk power supply\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <segment_time_data_detailed\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBSegmentTimeDataDetailed\fP ()"
.br
.RI "\fBSegmentTimeDataDetailed\fP\&. "
.ti -1c
.RI "\fBSegmentTimeDataDetailed\fP (const int &voltage, const int &current, const \fBData::SegmentMode\fP &mode, const \fBData::SegmentPower\fP &power, const uint8_t &time)"
.br
.RI "\fBSegmentTimeDataDetailed\fP\&. "
.ti -1c
.RI "void \fBsetSegmentVoltage\fP (const int &voltage)"
.br
.RI "setSegmentVoltage "
.ti -1c
.RI "void \fBsetSegmentCurrent\fP (const int &current)"
.br
.RI "setSegmentCurrent "
.ti -1c
.RI "void \fBsetSegmentMode\fP (const \fBData::SegmentMode\fP &mode)"
.br
.RI "setSegmentMode "
.ti -1c
.RI "void \fBsetSegmentPower\fP (const \fBData::SegmentPower\fP &power)"
.br
.RI "setSegmentPower "
.ti -1c
.RI "void \fBsetTimeValue\fP (const uint8_t &time)"
.br
.RI "setTimeValue "
.ti -1c
.RI "void \fBresetData\fP ()"
.br
.RI "resetData "
.ti -1c
.RI "void \fBupdateData\fP (const \fBSegmentTimeDataDetailed\fP &data)"
.br
.RI "updateData "
.ti -1c
.RI "\fBData::RegisterDataObject\fP \fBgetRegisterDataObject\fP () const"
.br
.RI "getRegisterDataObject "
.ti -1c
.RI "\fBData::SegmentMode\fP \fBgetSegmentMode\fP () const"
.br
.RI "getSegmentMode "
.ti -1c
.RI "\fBData::SegmentPower\fP \fBgetSegmentPower\fP () const"
.br
.RI "getSegmentPower "
.ti -1c
.RI "uint8_t \fBgetTimeValue\fP () const"
.br
.RI "getTimeValue "
.ti -1c
.RI "void \fBoperator=\fP (const \fBSegmentTimeDataDetailed\fP &rhs)"
.br
.RI "operator = "
.ti -1c
.RI "bool \fBoperator==\fP (const \fBSegmentTimeDataDetailed\fP &rhs) const"
.br
.RI "operator == "
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBSegmentTimeDataDetailed\fP &rhs) const"
.br
.RI "operator != "
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBData::RegisterDataObject\fP \fBdataObject\fP"
.br
.RI "dataObject "
.ti -1c
.RI "\fBData::SegmentMode\fP \fBsegmentMode\fP"
.br
.RI "segmentMode "
.ti -1c
.RI "\fBData::SegmentPower\fP \fBsegmentPower\fP"
.br
.RI "segmentPower "
.ti -1c
.RI "uint8_t \fBtimeValue\fP"
.br
.RI "timeValue "
.in -1c
.SH "Detailed Description"
.PP 
The \fBSegmentTimeDataDetailed\fP class is the class that the user should implement when establishing a segments data\&. The data contained in here shall be mapped later on to the correct levels and establish the necessary current/voltage messages for interacting with the munk power supply\&. 
.PP
Definition at line 17 of file segment_time_data_detailed\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "DataParameter::SegmentTimeDataDetailed::SegmentTimeDataDetailed ()"

.PP
\fBSegmentTimeDataDetailed\fP\&. 
.PP
Definition at line 5 of file segment_time_data_detailed\&.cpp\&.
.SS "DataParameter::SegmentTimeDataDetailed::SegmentTimeDataDetailed (const int & voltage, const int & current, const \fBData::SegmentMode\fP & mode, const \fBData::SegmentPower\fP & power, const uint8_t & time)"

.PP
\fBSegmentTimeDataDetailed\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIvoltage\fP 
.br
\fIcurrent\fP 
.br
\fImode\fP 
.br
\fIpower\fP 
.br
\fItime\fP 
.RE
.PP

.PP
Definition at line 11 of file segment_time_data_detailed\&.cpp\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBData::RegisterDataObject\fP DataParameter::SegmentTimeDataDetailed::getRegisterDataObject () const"

.PP
getRegisterDataObject 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 66 of file segment_time_data_detailed\&.cpp\&.
.SS "\fBData::SegmentMode\fP DataParameter::SegmentTimeDataDetailed::getSegmentMode () const"

.PP
getSegmentMode 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 71 of file segment_time_data_detailed\&.cpp\&.
.SS "\fBData::SegmentPower\fP DataParameter::SegmentTimeDataDetailed::getSegmentPower () const"

.PP
getSegmentPower 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 76 of file segment_time_data_detailed\&.cpp\&.
.SS "uint8_t DataParameter::SegmentTimeDataDetailed::getTimeValue () const"

.PP
getTimeValue 
.PP
\fBReturns:\fP
.RS 4

.RE
.PP

.PP
Definition at line 81 of file segment_time_data_detailed\&.cpp\&.
.SS "bool DataParameter::SegmentTimeDataDetailed::operator!= (const \fBSegmentTimeDataDetailed\fP & rhs) const\fC [inline]\fP"

.PP
operator != 
.PP
\fBParameters:\fP
.RS 4
\fIrhs\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 142 of file segment_time_data_detailed\&.h\&.
.SS "void DataParameter::SegmentTimeDataDetailed::operator= (const \fBSegmentTimeDataDetailed\fP & rhs)\fC [inline]\fP"

.PP
operator = 
.PP
\fBParameters:\fP
.RS 4
\fIrhs\fP 
.RE
.PP

.PP
Definition at line 107 of file segment_time_data_detailed\&.h\&.
.SS "bool DataParameter::SegmentTimeDataDetailed::operator== (const \fBSegmentTimeDataDetailed\fP & rhs) const\fC [inline]\fP"

.PP
operator == 
.PP
\fBParameters:\fP
.RS 4
\fIrhs\fP 
.RE
.PP
\fBReturns:\fP
.RS 4
.RE
.PP

.PP
Definition at line 120 of file segment_time_data_detailed\&.h\&.
.SS "void DataParameter::SegmentTimeDataDetailed::resetData ()"

.PP
resetData 
.PP
Definition at line 51 of file segment_time_data_detailed\&.cpp\&.
.SS "void DataParameter::SegmentTimeDataDetailed::setSegmentCurrent (const int & current)"

.PP
setSegmentCurrent 
.PP
\fBParameters:\fP
.RS 4
\fIcurrent\fP 
.RE
.PP

.PP
Definition at line 25 of file segment_time_data_detailed\&.cpp\&.
.SS "void DataParameter::SegmentTimeDataDetailed::setSegmentMode (const \fBData::SegmentMode\fP & mode)"

.PP
setSegmentMode 
.PP
\fBParameters:\fP
.RS 4
\fImode\fP 
.RE
.PP

.PP
Definition at line 30 of file segment_time_data_detailed\&.cpp\&.
.SS "void DataParameter::SegmentTimeDataDetailed::setSegmentPower (const \fBData::SegmentPower\fP & power)"

.PP
setSegmentPower 
.PP
\fBParameters:\fP
.RS 4
\fIpower\fP 
.RE
.PP

.PP
Definition at line 35 of file segment_time_data_detailed\&.cpp\&.
.SS "void DataParameter::SegmentTimeDataDetailed::setSegmentVoltage (const int & voltage)"

.PP
setSegmentVoltage 
.PP
\fBParameters:\fP
.RS 4
\fIvoltage\fP 
.RE
.PP

.PP
Definition at line 20 of file segment_time_data_detailed\&.cpp\&.
.SS "void DataParameter::SegmentTimeDataDetailed::setTimeValue (const uint8_t & time)"

.PP
setTimeValue 
.PP
\fBParameters:\fP
.RS 4
\fItime\fP 
.RE
.PP

.PP
Definition at line 40 of file segment_time_data_detailed\&.cpp\&.
.SS "void DataParameter::SegmentTimeDataDetailed::updateData (const \fBSegmentTimeDataDetailed\fP & data)"

.PP
updateData 
.PP
\fBParameters:\fP
.RS 4
\fIdata\fP 
.RE
.PP

.PP
Definition at line 60 of file segment_time_data_detailed\&.cpp\&.
.SH "Member Data Documentation"
.PP 
.SS "\fBData::RegisterDataObject\fP DataParameter::SegmentTimeDataDetailed::dataObject\fC [private]\fP"

.PP
dataObject 
.PP
Definition at line 151 of file segment_time_data_detailed\&.h\&.
.SS "\fBData::SegmentMode\fP DataParameter::SegmentTimeDataDetailed::segmentMode\fC [private]\fP"

.PP
segmentMode 
.PP
Definition at line 156 of file segment_time_data_detailed\&.h\&.
.SS "\fBData::SegmentPower\fP DataParameter::SegmentTimeDataDetailed::segmentPower\fC [private]\fP"

.PP
segmentPower 
.PP
Definition at line 161 of file segment_time_data_detailed\&.h\&.
.SS "uint8_t DataParameter::SegmentTimeDataDetailed::timeValue\fC [private]\fP"

.PP
timeValue 
.PP
Definition at line 166 of file segment_time_data_detailed\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for My Project from the source code\&.
